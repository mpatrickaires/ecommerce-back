// <auto-generated />
using ECommerceBack.Infra.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ECommerceBack.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20231106160210_CriarTabelas_Produto_ProdutoImagens_Cores_Tamanhos_Itens")]
    partial class CriarTabelas_Produto_ProdutoImagens_Cores_Tamanhos_Itens
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ECommerceBack.Domain.Entities.Cor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_cores");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasDatabaseName("ix_cores_codigo");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasDatabaseName("ix_cores_nome");

                    b.ToTable("cores", (string)null);
                });

            modelBuilder.Entity("ECommerceBack.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CorId")
                        .HasColumnType("integer")
                        .HasColumnName("cor_id");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer")
                        .HasColumnName("produto_id");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade_estoque");

                    b.Property<int>("TamanhoId")
                        .HasColumnType("integer")
                        .HasColumnName("tamanho_id");

                    b.HasKey("Id")
                        .HasName("pk_itens");

                    b.HasIndex("CorId")
                        .HasDatabaseName("ix_itens_cor_id");

                    b.HasIndex("TamanhoId")
                        .HasDatabaseName("ix_itens_tamanho_id");

                    b.HasIndex("ProdutoId", "TamanhoId", "CorId")
                        .IsUnique()
                        .HasDatabaseName("ix_itens_produto_id_tamanho_id_cor_id");

                    b.ToTable("itens", (string)null);
                });

            modelBuilder.Entity("ECommerceBack.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric")
                        .HasColumnName("preco");

                    b.HasKey("Id")
                        .HasName("pk_produtos");

                    b.ToTable("produtos", (string)null);
                });

            modelBuilder.Entity("ECommerceBack.Domain.Entities.ProdutoImagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ordem")
                        .HasColumnType("integer")
                        .HasColumnName("ordem");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer")
                        .HasColumnName("produto_id");

                    b.Property<string>("UrlImagem")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url_imagem");

                    b.HasKey("Id")
                        .HasName("pk_produto_imagens");

                    b.HasIndex("ProdutoId")
                        .HasDatabaseName("ix_produto_imagens_produto_id");

                    b.HasIndex("UrlImagem")
                        .IsUnique()
                        .HasDatabaseName("ix_produto_imagens_url_imagem");

                    b.ToTable("produto_imagens", (string)null);
                });

            modelBuilder.Entity("ECommerceBack.Domain.Entities.Tamanho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_tamanhos");

                    b.ToTable("tamanhos", (string)null);
                });

            modelBuilder.Entity("ECommerceBack.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.HasKey("Id")
                        .HasName("pk_usuarios");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("ECommerceBack.Domain.Entities.Item", b =>
                {
                    b.HasOne("ECommerceBack.Domain.Entities.Cor", "Cor")
                        .WithMany()
                        .HasForeignKey("CorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_itens_cores_cor_id");

                    b.HasOne("ECommerceBack.Domain.Entities.Produto", "Produto")
                        .WithMany("Itens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_itens_produtos_produto_id");

                    b.HasOne("ECommerceBack.Domain.Entities.Tamanho", "Tamanho")
                        .WithMany()
                        .HasForeignKey("TamanhoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_itens_tamanhos_tamanho_id");

                    b.Navigation("Cor");

                    b.Navigation("Produto");

                    b.Navigation("Tamanho");
                });

            modelBuilder.Entity("ECommerceBack.Domain.Entities.ProdutoImagem", b =>
                {
                    b.HasOne("ECommerceBack.Domain.Entities.Produto", "Produto")
                        .WithMany("Imagens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_produto_imagens_produtos_produto_id");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ECommerceBack.Domain.Entities.Produto", b =>
                {
                    b.Navigation("Imagens");

                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
